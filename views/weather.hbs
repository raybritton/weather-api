{{#extend 'head'}}
  <link rel="stylesheet" href="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css">
  <script src="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>
  <style>
    main {
      padding: 16px;
    }
    .graph {
      width: 100%;
      height: 300px;
    }
    .weather_indicator_container {
      width: 100%;
      height: 16px;
      display: flex;
      padding-left: 40px;
    }
    .weather_indicator {
      display: inline-block;
      width: 4%;
      height: 100%;
      background-color: rgb(230,230,230);
    }
    .rain {
      background-color: rgb(80, 80, 200);
    }
  </style>
{{/extend}}

<main>
  <section >
    <h3>Yesterday</h3>
    <div id="yesterday" class="graph ct-perfect-fourth"></div>
    <div class="weather_indicator_container" id="yesterday_indicator"></div>

    <h3 style="margin-top: 16px;">Today</h3>
    <div id="today" class="graph ct-perfect-fourth"></div>
    <div class="weather_indicator_container" id="today_indicator">
    </div>
    
    <h3 style="margin-top: 16px;">Tomorrow</h3>
    <div id="tomorrow" class="graph ct-perfect-fourth"></div>
    <div class="weather_indicator_container" id="tomorrow_indicator"></div>
  </section>
</main>

{{#extend 'scripts'}}
<script>
  const todayTemp = {{{today}}};
  const yesterdayTemp = {{{yesterday}}};
  const tomorrowTemp = {{{tomorrow}}};

  const todayRain = {{{todayRain}}};
  const yesterdayRain = {{{yesterdayRain}}};
  const tomorrowRain = {{{tomorrowRain}}};

  const options = {
    axisY: {
      onlyInteger: true,
      referenceValue: 0
    }
  };

  const todayData = {
    // A labels array that can contain any sort of values
    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
    // Our series array that contains series objects or in this case series data arrays
    series: [
      todayTemp
    ]
  };

  const yesterdayData = {
    // A labels array that can contain any sort of values
    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
    // Our series array that contains series objects or in this case series data arrays
    series: [
      yesterdayTemp
    ]
  };

  const tomorrowData = {
    // A labels array that can contain any sort of values
    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
    // Our series array that contains series objects or in this case series data arrays
    series: [
      tomorrowTemp
    ]
  };

  (function() {
    options.axisY.low = Math.min(...todayTemp.concat(yesterdayTemp).concat(tomorrowTemp)),
    options.axisY.high = Math.max(...todayTemp.concat(yesterdayTemp).concat(tomorrowTemp))

    new Chartist.Line('#today', todayData, options);
    new Chartist.Line('#yesterday', yesterdayData, options);
    new Chartist.Line('#tomorrow', tomorrowData, options);

    var todayIndicator = document.getElementById("today_indicator");
    for (var isRain of todayRain) {
      var div = document.createElement('div');
      div.classList.add("weather_indicator");
      if (isRain) {
        div.classList.add("rain");
      }
      todayIndicator.appendChild(div);
    }

    var yesterdayIndicator = document.getElementById("yesterday_indicator");
    for (var isRain of yesterdayRain) {
      var div = document.createElement('div');
      div.classList.add("weather_indicator");
      if (isRain) {
        div.classList.add("rain");
      }
      yesterdayIndicator.appendChild(div);
    }

    var tomorrowIndicator = document.getElementById("tomorrow_indicator");
    for (var isRain of tomorrowRain) {
      var div = document.createElement('div');
      div.classList.add("weather_indicator");
      if (isRain) {
        div.classList.add("rain");
      }
      tomorrowIndicator.appendChild(div);
    }
  })();
</script>
{{/extend}}